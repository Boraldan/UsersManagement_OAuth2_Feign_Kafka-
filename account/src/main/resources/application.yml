server:
  port: 0
spring:
  application:
    name: account
  profiles:
    active: file, secret
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8079/realms/master
            user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: ${keycloak.client-id}
            client-secret: ${keycloak.client-secret}
            scope:
              - openid
              - microprofile-jwt
              - account_scope
            authorization-grant-type: authorization_code
            provider: keycloak
          account-telros:
            client-id: ${keycloak.client-id}
            client-secret: ${keycloak.client-secret}
            scope:
              - openid
              - microprofile-jwt
              - account_scope
            authorization-grant-type: client_credentials
            provider: keycloak
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8079/realms/master
  datasource:
    url: jdbc:postgresql://localhost:15432/postgres_db
    driverClassName: org.postgresql.Driver
    username: ${postgres_db.USERNAME}
    password: ${postgres_db.PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect


eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    # Интервал обновление клиентом кэша реестра сервисов из сервера Eureka
    registry-fetch-interval-seconds: 30
    # Интервал первой репликации информации
    initial-instance-info-replication-interval-seconds: 10


